table(predict(diamond_ctree),diamond$price)
table(predict(diamond_ctree),head(diamond$price,20))
print(diamond_ctree)
plot(diamond_ctree)
plot(diamond_ctree,type="simple")
rpart_tree=rpart(myFormula,data=diamond)
library(rpart)
rpart_tree=rpart(myFormula,data=diamond)
rpart_tree=rpart(myFormula,data=diamond,control = rpart.control(minsplit = 10))
plot(rpart_tree)
text(rpart_tree,all=TRUE)
rf2 <- randomForest(price ~ ., data=diamond, ntree=100, proximity=TRUE)
table(predict(rf2), diamond$price)
rf2 <- randomForest(price ~ ., data=head(diamond,100), ntree=100, proximity=TRUE)
table(predict(rf2), diamond$price)
rf2 <- randomForest(price ~ ., data=head(diamond,100), ntree=100, proximity=TRUE)
table(predict(rf2), head(diamond$price,100))
rf1=randomForest(price~., head(diamond,50),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=2)
rf1=randomForest(price~., head(diamond,500),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=2)
rf1=randomForest(price~., head(diamond,1000),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=2)
rf1=randomForest(price~., head(diamond,3000),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=3)
rf1=randomForest(price~., tail(diamond,3000),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=3)
rf1=randomForest(price~., tail(diamond,30000),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=3)
plot(diamond$price,type="l")
points(pre6,type="l",col=3)
plot(diamond$price,type="l")
plot(head(diamond$price),type="l")
plot(head(diamond$price,100),type="l")
plot(head(diamond$price,1000),type="l")
plot(head(diamond$price,10000),type="l")
View(diamond)
View(diamond)
plot(head(diamond$price,100),type="l")
plot(head(diamond$price,200),type="l")
plot(head(diamond$price,300),type="l")
plot(head(diamond$price,400),type="l")
plot(head(diamond$price,430),type="l")
sort(diamond$price)
View(diamond)
diamond=diamond[order(diamond[,7])]
diamond[order(diamond[,7])]
diamond=data.frame(diamonds)
diamond[order(diamond[,7])]
diamond[order(diamond[,7]),]
diamond[sort(diamond[,7]),]
diamond=data.frame(diamonds)
diamond[sort(diamond[,7]),]
lm2=lm(price~carat+depth+table+x+y+z+cut+color,data=diamond)
steplm2=step(lm2)
price.predict=predict(steplm2,diamond)
matplot(diamond$price,type="l")
points(price.predict,type="l",col=2)
matplot(diamond$price,type="l")
View(diamond)
diamond=diamond[sort(diamond[,7]),]
diamond=data.frame(diamonds)
diamond=diamond[sort(diamond[,7]),]
lm2=lm(price~carat+depth+table+x+y+z+cut+color,data=diamond)
steplm2=step(lm2)
summary(steplm2)
price.predict=predict(steplm2,diamond)
matplot(diamond$price,type="l")
points(price.predict,type="l",col=2)
tmax2=tree(price~.,data=diamond)
plot(tmax2)
text(tmax2,all=TRUE)
set.seed(1234)
tcv=cv.tree(tmax2)
plot(tcv)
tmax3=prune.tree(tmax2,k=2e+10)
plot(tmax3)
text(tmax3,all=TRUE)
pre4=predict(tmax2,diamond)
glm2=glm(price~.,data=diamond)
glm3=step(glm2,diamond)
pre5=predict(glm3,diamond,type = "response")
matplot(diamond$price,type="l")
points(pre5,type="l",col=2)
matplot(diamond$price,type="l")
points(pre4,type="l",col=3)
rf1=randomForest(price~., tail(diamond,30000),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
plot(head(diamond$price,430),type="l")
points(pre6,type="l",col=3)
rf1=randomForest(price~., diamond,importance=TRUE,proximity=TRUE)
plot(head(diamond$price,50),type="l")
plot(head(diamond$price,500),type="l")
View(diamond)
View(diamond)
View(diamond)
diamond2=data.frame(diamonds)
diamond=diamond2[sort(diamond2[,7]),]
View(diamond2)
View(diamond2)
diamond=data.frame(diamonds)[sort(data.frame(diamonds)[,7]),]
matplot(diamond$price,type="l")
?predict
library(sqldf)
library(haven)
dataset <- read_stata(NULL)
View(dataset)
load("C:/Users/yzm/Desktop/.RData")
View(diamondsbig)
new_data=sqldf("select price from diamondbig where price is null")
head(diamondbig)
View(diamondsbig)
head(as.data.frame(diamondsbig))
diamondbig=as.data.frame(diamondbig)
as.data.frame(diamondsbig)
new_data=sqldf("select price from diamondbig where price is null")
as.data.frame(diamondsbig,na.rm=TRUE)
library(sqldf)
BD=as.data.frame(diamondsbig,na.rm=TRUE)
view(head(BD,100))
View(head(BD,100))
BD=na.omit(BD,TRUE)
new_data=sqldf("select price from BD where price is null")
new_data=sqldf("select count(* from DB where cert=GIA)")
new_data=sqldf("select count(* from DB where cert='GIA')")
new_data=sqldf("select count(*) from DB where cert='GIA'")
new_data=sqldf("select count(*) from BD where cert='GIA'")
new_data
new_data=sqldf("select count(*) from BD groupby cert ")
new_data=sqldf("select count(*) from BD group by cert ")
new_data
new_data=sqldf("select cert,count(*) from BD group by cert ")
new_data
head(d)
d=iris
head(d)
dd=iris[,c(-5)]
plot(dd)
dd=iris[,c(-5)]
plot(dd)
plot(d)
cor(d)
cor(d)
cor(d)
cor(d,method="lendall")
cor(d,method="kendall")
cor(d,method="spearman")
cor.test(d$Sepal.Length,d$Sepal.Width)
cor(d)
d=iris
cor(d)
cor(dd)
cor(dd)
cor(dd,method="kendall")
cor(dd,method="spearman")
?cor()
View(dd)
d=iris(na.rm=TRUE)
d=iris[na.rm=TRUE]
cor(dd)
set.seed(20022012)
diamonds_samp <- d[sample(1:length(d$Species),150),]
ggpairs(diamonds_samp,params = c(shape=I('.'),outlier.shape=I('.')))
install.packages("GGally")
library(GGally)
set.seed(20022012)
diamonds_samp <- d[sample(1:length(d$Species),150),]
ggpairs(diamonds_samp,params = c(shape=I('.'),outlier.shape=I('.')))
symnum(cor(dd))
set.seed(20022012)
diamonds_samp <- d[sample(1:length(d$Species),150),]
ggpairs(diamonds_samp,params = c(shape=I('.'),outlier.shape=I('.')))
ggpairs(diamonds_samp )
install.packages("pcaPP")
library(pcaPP)
plotcov(dd)
plotcov(cor(dd),method="correlation")
plotcov(cor(dd) )
cor(dd)
cor(dd)
cor(dd,method="kendall")
cor(dd,method="kendall")
plotcov(cor(dd,method="kendall") )
symnum(cor(dd))
cor(dd,method="kendall")
symnum(cor(dd))
symnum(cor(dd,method="kendall"))
cor.test(d$Sepal.Length,d$Sepal.Width)
plotcov(cor(dd,method="kendall") )
cor.test(d$Sepal.Length,d$Sepal.Width)
cor.test(d$Sepal.Length,d$Sepal.Width)
diag(2.1, nr = 3, nc = 5)
m <- matrix(c(1,1,2,1),2,2)
layout(m, widths=c(2, 1),
heights=c(1, 2))
layout.show(2)
cor.test(d$Sepal.Length,d$Petal.Length)
cor.test(d$Sepal.Length,d$Sepal.Width)
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrplot(cor(dd))
plotcov(cor(dd,method="kendall") )
plotcov(cor(dd,method="kendall") )
plotcov(cor(dd,method="kendall") )
corrplot(cor(dd))
plotcov(cor(dd,method="kendall") )
corrplot(cor(dd))
?corrplot
corrplot(cor(dd),type="upper")
corrplot(cor(dd),type="lower")
corrplot(cor(dd),type="lower")
d=mtcats
d=mtcatrs
d=mtcars
dd=mtcars
plot(dd)
cor(dd)
symnum(cor(dd,method="kendall"))
cor(dd,method="kendall")
plotcov(cor(dd,method="kendall") )
corrplot(cor(dd),type="lower")
head(d)
head(d)
d=iris
head(d)
head(d)
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/Decision Tree classification in R.r', encoding = 'UTF-8', echo=TRUE)
sample_data=sample(2,nrow(d),replace=TRUE,prob=(0.7,0.3))
sample_data=sample(2,nrow(d),replace=TRUE,prob=(0.7,0.3))
sample_data=sample(2,nrow(d),replace=TRUE,prob=(0.7,0.3))
sample_date <- sample(2,nrow(iris),replace=TRUE,prob=c(0.7,0.3))
train=iris[sample_date==1,]
test=iris[sample_date==2,]
head(test)
sam=sample(2,nrow(iris),replace=TRUE,prob=c(0.7,0.3))
?sample
sample(150,50)
sample(150,50)
sample(150,50)
seed(100)
sample(150,50)
seed(100)
sample(150,50)
dim(test)
s=sample(150,50)
s
s
s
s
s
s
s
s
s
s
s
s
s
library(rpart)
dtm=rpart(Species~., data=trian)
dtm=rpart(Species~., data=train)
?raprt
??rpart
?rapr
?rpart()
dtm=rpart(Species~., data=train,method="class")
dtm
draw(dtm)
draw(dtm)
plot(dtm)
text(all=TRUE)
plot(dtm)
text(all=TRUE)
text(dtm)
plot(dtm)
text(dtm)
library(rpart.plot)
install.packages("rpart.plot")
rpart.plot(dtm)
library(rpart.plot)
rpart.plot(dtm)
par(mfrow=c(1,1))
rpart.plot(dtm)
rpart.plot(dtm,type=4,extra=101)
predict(dtm,test)
tree_predict=predict(dtm,test)
tree_predict=predict(dtm,test[,5],type="class")
tree_predict=predict(dtm,test[,5],type="class")
tree_predict=predict(dtm,test,type="class")
table(tree_predict)
table(test)
table(test$Species)
table(tree_predict)
sam=sample(2,nrow(diamonds),replace = TRUE,prob=c(0.7,0.3))
sam=sample(2,nrow(diamond),replace = TRUE,prob=c(0.7,0.3))
d_train=diamond[sam==1,]
d_test=diamond[sam==2,]
d_dtm=rpart(price~.,d_train,type="class")
d_dtm=rpart(price~.,data=d_train,type="class")
d_dtm=rpart(price~.,data=d_train,method="class")
plot(d_dtm)
plot(d_dtm)
rpart.plot(d_dtm)
d_pre=predict(d_dtm,d_test,type="class")
table(d_pre)
table(d_test$price)
plot(d_dtm)
?rpart()
d_dtm=rpart(price~.,data=d_train)
plot(d_dtm)
d_pre=predict(d_dtm,d_test)
table(d_pre)
table(d_test$price)
table(d_pre)
rpart.plot(d_dtm)
?predict()
s=sample(150,50)
s
s
s
s
s
?sample
library(tree)
library(evtree)
install.packages("evtree")
library(evtree)
rpart.plot(dtm,type=4,extra=101)
library(rpart.plot)
rpart.plot(dtm,type=4,extra=101)
dtm2=tree(Species~.,data=train)
plot(dtm2)
text(dtm2,all=TRUE)
plot(dtm)
text(dtm,all=TRUE)
?tree()
dtm2=tree(Species~.,data=train,method="class")
plot(dtm2)
text(dtm2,all=TRUE)
predict2=predict(dtm2,test)
table(predict2)
table(tree_predict)
table(predict2)
table(test$Species,tree_predict)
table(test$Species,predict2)
predict2=predict(dtm2,test,type="class")
table(test$Species,predict2)
tree_predict=predict(dtm,test)
table(tree_predict)
table(test$Species,predict2.tree_predict)
table(test$Species,predict2,tree_predict)
predict2=predict(dtm2,test,type="class")
table(test$Species,predict2,tree_predict)
dtm2=tree(Species~.,data=train,method="class")
tree_predict=predict(dtm,test,type="class")
table(test$Species,predict2,tree_predict)
table(test$Species,predict2)
table(test$Species,tree_predict)
dtm3=evtree(Species~.,data=train,method="class")
plot(dtm3)
text(dtm3,all=TRUE)
plot(dtm3)
text(dtm3,all=TRUE)
text(dtm3)
plot(dtm3)
text(dtm3)
plot(dtm3)
mean(p==testp[,5])
mean(predict2==testp[,5])
mean(predict2==test[,5])
predict3=predict(dtm3,test,method="class")
table(test$Species,predict3)
mean=(predict3==test[,5])
mean(predict2==test[,5])
table(test$Species,predict3)
mean=(predict3==test[,5])
mean(predict3==test[,5])
mean(tree_predict==test[,5])
library(randomForest)
s=sample(2,nrow(iris),replace=TRUE,prob=c(0.85,0.15))
s=sample(2,nrow(iris),replace=TRUE,prob=c(0.85,0.15))
train=iris[s==1]
test=iris[s==2]
train=iris[s==1,]
test=iris[s==2,]
rfm=randomForest(Species~., data=trian)
library(randomForest)
rfm=randomForest(Species~., data=trian)
rfm=randomForest(Species~., data=train)
table(test[5,],rfm)
importance(rfm)
getTree(rfm,500,labelVar = TRUE)
table(test[,5],rfm)
rfm=randomForest(Species~., data=train)
table(test[,5],rfm)
table(test[,5],rfm)
table(test,rfm)
importance(rfm)
?randomForest()
getTree(rfm,500,labelVar = TRUE,do.trace=TRUE)
rfm=randomForest(Species~., data=train,do.trace=TRUE)
rfm=randomForest(Species~., data=train,do.trace=TRUE)
rfm=randomForest(Species~., data=train,do.trace=TRUE,mtree=50)
rfm=randomForest(Species~., data=train,do.trace=TRUE,mtree=50)
rfm=randomForest(Species~., data=train,do.trace=TRUE,ntree=50)
rfm
rfm=randomForest(Species~., data=train,do.trace=TRUE,ntree=500)
rfm
rfm=randomForest(Species~., data=train,do.trace=TRUE,ntree=500,mtry=10)
rfm=randomForest(Species~., data=train,do.trace=TRUE,ntree=500,mtry=5)
predict5=predict(rfm,test)
predict5=predict(rfm,test)
table(test,prefict5)
table(test,predict5)
predict5=predict(rfm,test)
table(test,predict5)
mean(test[,5]==predict5)
rfm=randomForest(Species~., data=train,do.trace=TRUE,ntree=500)
table(test,predict5)
mean(test[,5]==predict5)
importance(rfm)
getTree(rfm,500,labelVar = TRUE)
predict5=predict(rfm,test)
table(test,predict5)
table(test[,5],predict5)
mean(test[,5]==predict5)
?princomp
?prcomp
head(mtcars)
pc=prcomp(mtcars)
pc
pc=prcomp(mtcars,cor=TRUE,score=TRUE)
pc=princomp(mtcars,cor=TRUE,score=TRUE)
pc
pc=princomp(mtcars,cor=TRUE,scores=TRUE)
pc
pc=princomp(mtcars,cor=TRUE,scores=TRUE)
pc
pc=princomp(mtcars,cor=TRUE,scores=TRUE)
pc
summary(pc)
plot(pc)
plot(pc,type="l",col=2)
biplot(pc)
attr(pc)
attributes(pc)
pc$loadings
loadings(pc)
pc$socres
attributes(pc)
View(pc)
View(as.data.frame(pc))
p=as.data.frame(pc)
summary(pc)
plot(pc,type="l",col=2)
pc
library(psych)
install.packages("psych")
library(psych)
fit=principal(mtcars,nfactors = 5, rotate="varimax")
fit
fit=factanal(mtcars,3,rotation = "varimax")
load=fit$loadings[,1:2]
plot(fit,type="n")
load=fit$loadings[,1:2]
plot(fit,type="n")
text(load,labels=names(mtcars),cex=.7)
fit=factanal(mtcars,3,rotation = "varimax")
load=fit$loadings[,1:2]
plot(fit,type="n")
text(load,labels=names(mtcars),cex=.7)
diamonds_samp <- d[sample(1:length(d$Species),150),]
ggpairs(diamonds_samp )
diag(2.1, nr = 3, nc = 5)
m <- matrix(c(1,1,2,1),2,2)
layout(m, widths=c(2, 1),
heights=c(1, 2))
layout.show(2)
install.packages("ca")
library(ca)
mytable=with(mtcars,table(A,B))
mytable=with(iris,table(iris$Species,iris$Sepal.Length))
prop.table(mytable,1)
fit=ca(mytable)
print(fit)
summary(fit)
plot(fit)
plot(fit, mass = TRUE, contrib = "absolute", map =
"rowgreen", arrows = c(FALSE, TRUE))
plot(fit, mass = TRUE, contrib = "absolute", map =
"rowgreen
head(diamond)
head(diamonds)
cor(dd)
dd=mtcars
fgn
fng
dev.off()
eixt
