tree_model2=prune(tree_model,cp=0.1)
dfp2=predict(tree_model2,interval = "prediction")
head(dfp2,10)
head(dfp2,1000)
draw(mdf2)
dfp=predict(step_lm_model,interval = "prediction")
head(dfp,10)
View(dfp)
library(ggplot2)
library(car)
head(diamonds)
diamond=data.frame(diamonds,na.rm=TRUE)
lm1=lm(price~carat+depth+table+x+y+z+cut+color+clarity,data=diamond,na.rm=TRUE)
lm2=lm(price~., data=diamond[-c(2,3,4)])
summary(lm2)
summary(lm1)
steplm1=step(lm1)
summary(steplm1)
par(mfrow=c(2,2))
plot(steplm1)
dfp=predict(steplm1,interval="prediction")
head(dfp,100)
# big memory required
mdf=merge(diamond$price,dfp)
mdf2=merge(head(diamond$price,1000),head(dfp,1000))
head(mdf2)
head(mdf2,100)
line(mdf2$x)
mdf2=matrix(mdf2,ncol=5,byrow = T)
mdf2=matrix(mdf2,ncol=4,byrow = T)
mdf2=matrix(mdf2,ncol=4,byrow = T)
mdf2
head(mdf2,100)
matplot(mdf2[,1],mdf2[,2:4],type="l",lwd=1,xlab="x",ylab="y")
matplot(mdf2[,1],mdf2[,2:4],type="l",lwd=1)
mdf2=merge(head(diamond$price,1000),head(dfp,1000))
plot(mdf2[,1],mdf2[,2:4],type="l",lwd=1)
plot(mdf2[,1],mdf2[,2:5],type="l",lwd=1)
plot(mdf2[,1],mdf2[,2:4],type="l",lwd=1)
mdf2
head(mdf2)
head(mdf2[,1])
head(mdf2[1,])
mdf3=matrix(mdf2,ncol=9,byrow = TRUE)
mdf3=matrix(mdf2,ncol=4,byrow = TRUE)
head(mdf3)
plot(mdf3[,1],mdf2[,2:4],type="l",lwd=1)
plot(mdf2[,0],mdf2[,2:4],type="l",lwd=1)
head(mdf2[,1])
head(mdf2[,0])
head(mdf2[1,])
[1:1000000]
mdf2$id=c[1:1000000]
id=c[1:1000000]
id=c[1:1000000]
id=(1:100)
id=(1:1000000)
cbind(mdf2,id)
head(mdf2)
rbind(mdf2,id)
rbind(mdf2,id)
function (..., deparse.level = 1)
cbind(mdf2,id)
head(mdf2)
mdf2=cbind(mdf2,id)
head(mdf2)
plot(mdf2[,5],mdf2[,1:4],type="l",lwd=1)
head(mdf2)
tail(mdf2)
tail(mdf2)
lenghth(mdf2[,5])
length(mdf2[,5])
length(mdf2[1:4])
plot(mdf2[,5],mdf2$[,1:4],type="l",lwd=1)
plot(mdf2[,5],mdf2$x,type="l",lwd=1)
plot((1:1000000),mdf2$x,type="l",lwd=1)
plot((1:1000000),mdf2$x,type="l",lwd=1)
matplot((1:1000000),mdf2$x,type="l",lwd=1)
matplot((1:1000000),mdf2$fit,type="l",lwd=1)
matplot((1:1000000),mdf2$lwr,type="l",lwd=1)
line((1:1000000),mdf2$fit,type="l",lwd=1)
line((1:1000000),mdf2$x,type="l",lwd=1)
line((1:1000000),mdf2$x)
matplot(c(1:1000000),mdf2[,2:4],type="l",lwd=1,xlab="x",ylab="y")
line((1:1000000),mdf2$x)
matplot(c(1:1000000),mdf2[,1:4],type="l",lwd=1,xlab="x",ylab="y")
colnames(mdf2)=paste(c("x",1:5))
matplot(c(1:1000000),mdf2[,1:4],col=c(1:6,8:9),type="l",lwd=1,xlab="x",ylab="y")
legend("20,3000000",colnames(mdf2)[-1],col=c(1:6,8:9),lwd=1)
colnames(mdf2)=paste(c("x",1:5))
colnames(mdf2)=paste(c("x",1:5))
legend("20,3000000",colnames(mdf2)[-1],col=c(1:6,8:9),lwd=1)
matplot(c(1:1000000),mdf2[,1:4],col=c(1:6,8:9),type="l",lwd=1,xlab="x",ylab="y")
matplot(c(1:1000000),mdf2[,1:4],col=c(1:6,8:9),type="l",lwd=1,xlab="x",ylab="y")
source('C:/Users/yzm/Desktop/Diamond.R', echo=TRUE)
matplot(c(1:1000000),mdf2[,1:4],col=c(1:6,8:9),type="l",lwd=1,xlab="x",ylab="y")
matplot(c(1:1000000),mdf2[,1:4],col=c(1:6,8:9),type="l",lwd=1,xlab="x",ylab="y")
plot(c(1:1000000),mdf2[,1:4],col=c(1:6,8:9),type="l",lwd=1,xlab="x",ylab="y")
plot(c(1:1000000),mdf2[,1:4],col=c(1:6,8:9),type="l",lwd=1,xlab="x",ylab="y")
matplot(c(1:1000000),mdf2[,1:4],type="l",lwd=1,xlab="x",ylab="y")
,col=c(1:6,8:9)
matplot(c(1:1000000),mdf2[,2:4],type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
matplot(c(1:1000000),mdf2[,1:4],type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
tail(mdf2)
matplot(c(1:1000000),mdf2[,1:4],type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
line((1:1000000),mdf2$x)
abline((1:1000000),mdf2$x)
matplot(c(1:1000000),mdf2[,1:4],type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
plot(c(1:1000000),mdf2[,1:4],type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
plot(c(1:100000),mdf2[,1:4],type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
plot(c(1:100000),head(mdf2[,1:4],100000),type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
plot(c(1:100000),head(mdf2[,1:4],100000),type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
View(mdf2)
View(mdf2)
View(mdf2)
View(mdf2)
View(mdf2)
View(mdf2)
View(mdf2)
plot(c(1:1000000),mdf2[,1:4],,type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
library(ggplot2)
library(car)
head(diamonds)
diamond=data.frame(diamonds,na.rm=TRUE)
lm1=lm(price~carat+depth+table+x+y+z+cut+color+clarity,data=diamond,na.rm=TRUE)
steplm1=step(lm1)
steplm1=step(lm1)
summary(steplm1)
par(mfrow=c(2,2))
plot(steplm1)
dfp=predict(steplm1,interval="prediction")
head(dfp,100)
# big memory required
#mdf=merge(diamond$price,dfp)
mdf2=merge(head(diamond$price,1000),head(dfp,1000))
id=(1:1000000)
mdf2=cbind(mdf2,id)
tail(mdf2)
length(mdf2[1:4])
plot(c(1:1000000),mdf2[,1:4],type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
plot(c(1:1000000),mdf2[,1:4],type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
abline((1:1000000),mdf2$x)
plot(c(1:1000000),mdf2$x,type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
plot(c(1:1000000),mdf2$x,type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
plot(c(1:1000000),mdf2$fit,type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
plot(c(1:1000000),mdf2$fit,type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
abline((1:1000000),mdf2$x)
plot(c(1:1000000),mdf2$fit,type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
plot(c(1:1000000),mdf2$fit,type="l",lwd=1,col=c(1:6,8:9),xlab="x",ylab="y")
library(ggplot2)
library(tree)
library(randomForest)
rf1=randomForest(price~., head(diamond,50),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
table(pre6,diamond$price)
table=table(pre6,diamond$price)
sum(diag(table)/sum(table))
model.forest.all <-randomForest(price ~ ., data = diamond,importance=TRUE,proximity=TRUE)
importance(model.forest.all)
varImpPlot(model.forest.all)
model.forest.all <-randomForest(price ~ ., data =  head(diamond,50),importance=TRUE,proximity=TRUE)
importance(model.forest.all)
varI
model.forest.all <-randomForest(price ~ ., data =  head(diamond,50),importance=TRUE,proximity=TRUE)
importance(model.forest.all)
varImpPlot(model.forest.all)
model.forest.all <-randomForest(price ~ ., data =  head(diamond,5000),importance=TRUE,proximity=TRUE)
importance(model.forest.all)
varImpPlot(model.forest.all)
library(party)
install.packages("party")
library(party)
myFormula=price~carat+depth+table+x+y+z+cut+color+clarity.
diamond_ctree=ctree(myFormula,data=diamond)
myFormula=price~carat+depth+table+x+y+z+cut+color+clarity
myFormula=price~carat+depth+table+x+y+z+cut+color+clarity
diamond_ctree=ctree(myFormula,data=diamond)
table(predict(diamond_ctree),diamond$price)
myFormula=price~carat+depth+table+x+y+z+cut+color+clarity
diamond_ctree=ctree(myFormula,data=head(diamond,20))
table(predict(diamond_ctree),diamond$price)
myFormula=price~carat+depth+table+x+y+z+cut+color+clarity
diamond_ctree=ctree(myFormula,data=head(diamond,20))
table(predict(diamond_ctree),diamond$price)
table(predict(diamond_ctree),head(diamond$price,20))
print(diamond_ctree)
plot(diamond_ctree)
plot(diamond_ctree,type="simple")
rpart_tree=rpart(myFormula,data=diamond)
library(rpart)
rpart_tree=rpart(myFormula,data=diamond)
rpart_tree=rpart(myFormula,data=diamond,control = rpart.control(minsplit = 10))
plot(rpart_tree)
text(rpart_tree,all=TRUE)
rf2 <- randomForest(price ~ ., data=diamond, ntree=100, proximity=TRUE)
table(predict(rf2), diamond$price)
rf2 <- randomForest(price ~ ., data=head(diamond,100), ntree=100, proximity=TRUE)
table(predict(rf2), diamond$price)
rf2 <- randomForest(price ~ ., data=head(diamond,100), ntree=100, proximity=TRUE)
table(predict(rf2), head(diamond$price,100))
rf1=randomForest(price~., head(diamond,50),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=2)
rf1=randomForest(price~., head(diamond,500),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=2)
rf1=randomForest(price~., head(diamond,1000),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=2)
rf1=randomForest(price~., head(diamond,3000),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=3)
rf1=randomForest(price~., tail(diamond,3000),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=3)
rf1=randomForest(price~., tail(diamond,30000),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
matplot(diamond$price,type="l")
points(pre6,type="l",col=3)
plot(diamond$price,type="l")
points(pre6,type="l",col=3)
plot(diamond$price,type="l")
plot(head(diamond$price),type="l")
plot(head(diamond$price,100),type="l")
plot(head(diamond$price,1000),type="l")
plot(head(diamond$price,10000),type="l")
View(diamond)
View(diamond)
plot(head(diamond$price,100),type="l")
plot(head(diamond$price,200),type="l")
plot(head(diamond$price,300),type="l")
plot(head(diamond$price,400),type="l")
plot(head(diamond$price,430),type="l")
sort(diamond$price)
View(diamond)
diamond=diamond[order(diamond[,7])]
diamond[order(diamond[,7])]
diamond=data.frame(diamonds)
diamond[order(diamond[,7])]
diamond[order(diamond[,7]),]
diamond[sort(diamond[,7]),]
diamond=data.frame(diamonds)
diamond[sort(diamond[,7]),]
lm2=lm(price~carat+depth+table+x+y+z+cut+color,data=diamond)
steplm2=step(lm2)
price.predict=predict(steplm2,diamond)
matplot(diamond$price,type="l")
points(price.predict,type="l",col=2)
matplot(diamond$price,type="l")
View(diamond)
diamond=diamond[sort(diamond[,7]),]
diamond=data.frame(diamonds)
diamond=diamond[sort(diamond[,7]),]
lm2=lm(price~carat+depth+table+x+y+z+cut+color,data=diamond)
steplm2=step(lm2)
summary(steplm2)
price.predict=predict(steplm2,diamond)
matplot(diamond$price,type="l")
points(price.predict,type="l",col=2)
tmax2=tree(price~.,data=diamond)
plot(tmax2)
text(tmax2,all=TRUE)
set.seed(1234)
tcv=cv.tree(tmax2)
plot(tcv)
tmax3=prune.tree(tmax2,k=2e+10)
plot(tmax3)
text(tmax3,all=TRUE)
pre4=predict(tmax2,diamond)
glm2=glm(price~.,data=diamond)
glm3=step(glm2,diamond)
pre5=predict(glm3,diamond,type = "response")
matplot(diamond$price,type="l")
points(pre5,type="l",col=2)
matplot(diamond$price,type="l")
points(pre4,type="l",col=3)
rf1=randomForest(price~., tail(diamond,30000),importance=TRUE,proximity=TRUE)
pre6=predict(rf1,diamond)
plot(head(diamond$price,430),type="l")
points(pre6,type="l",col=3)
rf1=randomForest(price~., diamond,importance=TRUE,proximity=TRUE)
plot(head(diamond$price,50),type="l")
plot(head(diamond$price,500),type="l")
View(diamond)
View(diamond)
View(diamond)
diamond2=data.frame(diamonds)
diamond=diamond2[sort(diamond2[,7]),]
View(diamond2)
View(diamond2)
diamond=data.frame(diamonds)[sort(data.frame(diamonds)[,7]),]
matplot(diamond$price,type="l")
?predict
library(sqldf)
library(haven)
dataset <- read_stata(NULL)
View(dataset)
load("C:/Users/yzm/Desktop/.RData")
View(diamondsbig)
new_data=sqldf("select price from diamondbig where price is null")
head(diamondbig)
View(diamondsbig)
head(as.data.frame(diamondsbig))
diamondbig=as.data.frame(diamondbig)
as.data.frame(diamondsbig)
new_data=sqldf("select price from diamondbig where price is null")
as.data.frame(diamondsbig,na.rm=TRUE)
library(sqldf)
BD=as.data.frame(diamondsbig,na.rm=TRUE)
view(head(BD,100))
View(head(BD,100))
BD=na.omit(BD,TRUE)
new_data=sqldf("select price from BD where price is null")
new_data=sqldf("select count(* from DB where cert=GIA)")
new_data=sqldf("select count(* from DB where cert='GIA')")
new_data=sqldf("select count(*) from DB where cert='GIA'")
new_data=sqldf("select count(*) from BD where cert='GIA'")
new_data
new_data=sqldf("select count(*) from BD groupby cert ")
new_data=sqldf("select count(*) from BD group by cert ")
new_data
new_data=sqldf("select cert,count(*) from BD group by cert ")
new_data
head(d)
d=iris
head(d)
dd=iris[,c(-5)]
plot(dd)
dd=iris[,c(-5)]
plot(dd)
plot(d)
cor(d)
cor(d)
cor(d)
cor(d,method="lendall")
cor(d,method="kendall")
cor(d,method="spearman")
cor.test(d$Sepal.Length,d$Sepal.Width)
cor(d)
d=iris
cor(d)
cor(dd)
cor(dd)
cor(dd,method="kendall")
cor(dd,method="spearman")
?cor()
View(dd)
d=iris(na.rm=TRUE)
d=iris[na.rm=TRUE]
cor(dd)
set.seed(20022012)
diamonds_samp <- d[sample(1:length(d$Species),150),]
ggpairs(diamonds_samp,params = c(shape=I('.'),outlier.shape=I('.')))
install.packages("GGally")
library(GGally)
set.seed(20022012)
diamonds_samp <- d[sample(1:length(d$Species),150),]
ggpairs(diamonds_samp,params = c(shape=I('.'),outlier.shape=I('.')))
symnum(cor(dd))
set.seed(20022012)
diamonds_samp <- d[sample(1:length(d$Species),150),]
ggpairs(diamonds_samp,params = c(shape=I('.'),outlier.shape=I('.')))
ggpairs(diamonds_samp )
install.packages("pcaPP")
library(pcaPP)
plotcov(dd)
plotcov(cor(dd),method="correlation")
plotcov(cor(dd) )
cor(dd)
cor(dd)
cor(dd,method="kendall")
cor(dd,method="kendall")
plotcov(cor(dd,method="kendall") )
symnum(cor(dd))
cor(dd,method="kendall")
symnum(cor(dd))
symnum(cor(dd,method="kendall"))
cor.test(d$Sepal.Length,d$Sepal.Width)
plotcov(cor(dd,method="kendall") )
cor.test(d$Sepal.Length,d$Sepal.Width)
cor.test(d$Sepal.Length,d$Sepal.Width)
diag(2.1, nr = 3, nc = 5)
m <- matrix(c(1,1,2,1),2,2)
layout(m, widths=c(2, 1),
heights=c(1, 2))
layout.show(2)
cor.test(d$Sepal.Length,d$Petal.Length)
cor.test(d$Sepal.Length,d$Sepal.Width)
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrplot(cor(dd))
plotcov(cor(dd,method="kendall") )
plotcov(cor(dd,method="kendall") )
plotcov(cor(dd,method="kendall") )
corrplot(cor(dd))
plotcov(cor(dd,method="kendall") )
corrplot(cor(dd))
?corrplot
corrplot(cor(dd),type="upper")
corrplot(cor(dd),type="lower")
corrplot(cor(dd),type="lower")
d=mtcats
d=mtcatrs
d=mtcars
dd=mtcars
plot(dd)
cor(dd)
symnum(cor(dd,method="kendall"))
cor(dd,method="kendall")
plotcov(cor(dd,method="kendall") )
corrplot(cor(dd),type="lower")
head(d)
head(d)
d=iris
head(d)
head(d)
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/Decision Tree classification in R.r', encoding = 'UTF-8', echo=TRUE)
sample_data=sample(2,nrow(d),replace=TRUE,prob=(0.7,0.3))
sample_data=sample(2,nrow(d),replace=TRUE,prob=(0.7,0.3))
sample_data=sample(2,nrow(d),replace=TRUE,prob=(0.7,0.3))
sample_date <- sample(2,nrow(iris),replace=TRUE,prob=c(0.7,0.3))
train=iris[sample_date==1,]
test=iris[sample_date==2,]
head(test)
sam=sample(2,nrow(iris),replace=TRUE,prob=c(0.7,0.3))
?sample
sample(150,50)
sample(150,50)
sample(150,50)
seed(100)
sample(150,50)
seed(100)
sample(150,50)
dim(test)
s=sample(150,50)
s
s
s
s
s
s
s
s
s
s
s
s
s
library(rpart)
dtm=rpart(Species~., data=trian)
dtm=rpart(Species~., data=train)
?raprt
??rpart
?rapr
?rpart()
dtm=rpart(Species~., data=train,method="class")
dtm
draw(dtm)
draw(dtm)
plot(dtm)
text(all=TRUE)
plot(dtm)
text(all=TRUE)
text(dtm)
plot(dtm)
text(dtm)
library(rpart.plot)
install.packages("rpart.plot")
rpart.plot(dtm)
library(rpart.plot)
rpart.plot(dtm)
par(mfrow=c(1,1))
rpart.plot(dtm)
rpart.plot(dtm,type=4,extra=101)
predict(dtm,test)
tree_predict=predict(dtm,test)
tree_predict=predict(dtm,test[,5],type="class")
tree_predict=predict(dtm,test[,5],type="class")
tree_predict=predict(dtm,test,type="class")
table(tree_predict)
table(test)
table(test$Species)
table(tree_predict)
sam=sample(2,nrow(diamonds),replace = TRUE,prob=c(0.7,0.3))
sam=sample(2,nrow(diamond),replace = TRUE,prob=c(0.7,0.3))
d_train=diamond[sam==1,]
d_test=diamond[sam==2,]
d_dtm=rpart(price~.,d_train,type="class")
d_dtm=rpart(price~.,data=d_train,type="class")
d_dtm=rpart(price~.,data=d_train,method="class")
plot(d_dtm)
plot(d_dtm)
rpart.plot(d_dtm)
d_pre=predict(d_dtm,d_test,type="class")
table(d_pre)
table(d_test$price)
plot(d_dtm)
?rpart()
d_dtm=rpart(price~.,data=d_train)
plot(d_dtm)
d_pre=predict(d_dtm,d_test)
table(d_pre)
table(d_test$price)
table(d_pre)
rpart.plot(d_dtm)
?predict()
