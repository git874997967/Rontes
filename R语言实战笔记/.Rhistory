str_trim(info)
infom=Matrix(info,ncol=3)
infoList=strsplit(info,';')
infom=Matrix(infoList,ncol=3)
info
strsplit(info,';')
infoList=strsplit(info,';')
infoM=Matrix(infoList,ncol=3)
infoM=Matrix(unlist(infoList),ncol=3)
infoM=Matrix(info,ncol=3)
infoM=Matrix(infoList,ncol=3)
infoM
info
infoList=str_split(info,';')
infoList
unlist(infoList)
infoM=Matrix(infoList,col=3)
infoM=Matrix(infoList,ncol=3)
infoM=Matrix(unlist(infoList),ncol=3)
View(infoFrame)
View(info1)
?Matrix
infoList
infoList[1]
Ulist=unlist(infoList)
Ulist
Ulist[1]
Ulist[2]
Matrix(Ulist,ncol=3)
Matrix(Ulist,nrow=3)
info
info=exer[!commont]
info
str_trim(info)
str_to_lower(info)
info[2]=paste(info[2],'NA')
info
Matrix(info,nrow=3)
Matrix(unlist(info),nrow=3)
infoList=strsplit(info,';')
infoList
Matrix(infoList,nrow=3)
Matrix(infoList,ncol=3)
matrix(infoList,ncol=3)
matrix(unlist(infoList),ncol=3)
infom=Matrix(info,ncol=3)
matrix(unlist(infoList))
matrix(unlist(infoList),byrow=T,ncol=3)
info=str_to_lower(info)
info[2]=paste(info[2],'NA')
infoList=strsplit(info,';')
infoList
infom=matrix(unlist(infoList),byrow=T,ncol=3)
df=data.frame(infom)
df
info=exer[!commont]
str_trim(info)
info=str_to_lower(info)
info[2]=paste(info[2],'NA')
infoList=strsplit(info,';')
infoList
infom=matrix(unlist(infoList),byrow=T,ncol=3)
df=data.frame(infom)
df
colname=c('gender','age','weight')
colnames(df)=colname
df
dis=adist(df$gender,codes)
dis
i=apply(dis,1,which.min)
i
df$gender=codes[i]
df
str(df)
df$gender=as.factor(df$gender)
str(df)
df$age=as.numeric(df$age)
str(df)
df$gender=codes[i]
str(df)
#### next part process to the consistent data
# 1 detection of an inconsistency
age=c(23,21,NA)
lapply(age,mean)
sapply(age,mean)
apply(age,mean)
mean(age)
mean(age,na.omit=T)
mean(age,na.rm=T)
x <- c(1:10, 20, 30)
X
x
boxplot.stats(x)$out
boxplot.stats(x)
boxplot(x)
boxplot(x)
boxplot.stats(x)
data=read.csv(file.choose(),encoding = 'utf-8')
data
class(data)
str(data)
install.packages("editrules")
library(editrules)
class(data)
e=editset(c('age'>0,'age<150'))
(e=editset(c('age'>0,'age<150')))
(e=editset(c('age'>=0,'age<=150')))
(E <- editset(c("age >=0", "age <= 150")))
(e= editset(c('age>=0','age<=150')))
violatedEdits(E,data)
?editset
data
(F <- editset(c("yearsmarried >=0", "yearsmarried <= 50")))
violatedEdits(E,F,data)
(F<- editset(c("yearsmarried >=0", "yearsmarried <= 50")))
violatedEdits(F,data)
data
(E <- editset(c("age >=0", "age <= 150","yearsmarried >=0", "yearsmarried <= 50")))
violatedEdits(E,data)
F=editfile(file.choose())
F
violatedEdits(F,data)
violatedEdits(F,data)
F
data
F=editfile(file.choose())
F
violatedEdits(F,data)
data
F=editfile(file.choose())
F
F=editfile(file.choose())
F
F=editfile(file.choose())
F
violatedEdits(F,data)
data[1]
data[1,]
data[1,]$status %in% c('married','single','widowed')
ve=violatedEdits(F,data)
summary(ve)
summary(ve)
plot(ve)
barplot(ve)
plot(ve)
summary(data)
plot(F)
id=c(2,5)
people[id,]
data[id,]
violatedEdits(F,data[id,])
le=localizeErrors(F,data[id,],method='mip')
le$adapt
data[2, "status"] <- "single"
data[5, "height"] <- 7
data[5, "agegroup"] <- "adult"
summary(violatedEdits(E, data[id, ]))
le=localizeErrors(F,data[id,],method='mip')
le$adapt
data[id,]
#####  unifiy the height
marx=read.csv(file.choose())
marx
marx_m=marx
I= marx$unit=='cm'
marx_m[I,'height']=marx$height/100
marx_m
#####  unifiy the height
marx=read.csv(file.choose(),sep=' ')
marx_m=marx
marx_m
I= marx$unit=='cm'
marx_m[I,'height']=marx$height/100
I= marx$unit=='cm'
marx_m[I,'height']=marx$height/100
I= marx$unit=='cm'
marx_m[I,'height']=marx$height/100
I
I ='cm'
marx_m[I,'height']=marx$height/100
marx_m[I,'height']=marx$height[I]/100
marx_m
marx_m[I,'height']=marx$height[I]/100
marx_m
G=editmatrix(expression(
staff+cleaning+housing=total,
staff>=0,
housing>=0,
cleaning>=0
))
G=editmatrix(expression(
staff+cleaning+housing==total,
staff>=0,
housing>=0,
cleaning>=0
))
dat=data.frame(
staff=c(100,100,100),
housing=c(NA,50,NA),
cleaning=c(NA,NA,NA),
total=c(100,80,NA)
)
str(dat)
cor=deduImute(G,dat)
cor=deduImpute(G,dat)
install.packages("deducorrect")
library(deducorrect)
cor=deduImpute(G,dat)
cor$corrected
dat=data.frame(
staff=c(100,100,100),
housing=c(NA,50,NA),
cleaning=c(NA,NA,NA),
total=c(100,180,NA)
)
cor=deduImpute(G,dat)
cor$corrected
# next part is talk about how to do imputation
# the first one is about number,     replace   na with the mean
# package Hmisc can compute mean and median from na values
# ##########
# next part is talk about how to do imputation
# the first one is about number,     replace   na with the mean
# package Hmisc can compute mean and median from na values
age
#### next part process to the consistent data
# 1 detection of an inconsistency
age=c(23,21,NA)
# ##########
# next part is talk about how to do imputation
# the first one is about number,     replace   na with the mean
# package Hmisc can compute mean and median from na values
age
mean(age)
meidan(age)
age[is.na(age)]=mean(age,na.rm=T)
mean(age)
age
#### next part process to the consistent data
# 1 detection of an inconsistency
age=c(23,21,NA)
install.packages("Hmisc")
library(Hmisc)
age
age1=impute(age,fun=mean)
age1=impute(age,fun=mean)
impute
?impute
age1=impute(x,fun=mean)
age
class(age)
age
age1=impute(as.list(age),fun=mean)
age[1]
age1=impute(age,fun=mean)
x=1:5
x[2]=NA
x1=impute(x,fun=mean)
class(x)
x=impute(x,fun=mean)
is.imputed(x)
x
I= is.na(x)
I
x.i=impute(x)
x
x.i=impute(x,fun=mean)
x.i=impute(x,mean)
x
x=c(1,2,NA,4)
x[2]=NA
class(x)
x.i=impute(x,mean)
x.i=impute(x)
x.i
x.i=impute(x,random)
x.i=impute(x,'random')
x.i
x.i=impute(x,'random')
x.i
x.i=impute(x,'mean')
x.i
x.i=impute(x,mean)
x.i
x=impute(x,mean)
install.packages("openNLP")
?dplyr
??dplyr
choose(1200,39)
choose(1200,30)-2^10
get=function(x,y,w,z){
for(i in x:y){
for(j in w:z){
print(choose(i,j)-2^128)
}
}
}
get(1000,1100,10,20)
get(1000,1100,5,10)
get(1100,1200,5,10)
get(1100,1200,50,100)
get(1100,1101,50,100)
get(1100,1101,50,52)
get(1000,1010,50,52)
get(1000,1010,50,52)
get(1000,1010,20,30)
get(500,510,20,30)
get(500,505,20,25)
get(400,405,20,25)
get=function(x,y,w,z){
for(i in x:y){
for(j in w:z){
choose(i,j)-2^128>0?print(choose(i,j)-2^128):print(" should be bigger")
}
}
}
get(400,405,20,25)
get=function(x,y,w,z){
for(i in x:y){
for(j in w:z){
result=choose(i,j)-2^128
ifelse(result>0,print(result),print('should bigger'))
}
}
}
get(400,405,20,25)
reults.add(result)
get=function(x,y,w,z){
results=0
for(i in x:y){
for(j in w:z){
result=choose(i,j)-2^128
ifelse(result>0,print(result),print('should bigger'))
results=c(results,result)
}
}
plot(results)
}
get(400,405,20,25)
get(400,405,20,25)
results
results=0
get=function(x,y,w,z){
results=0
for(i in x:y){
for(j in w:z){
result=choose(i,j)-2^128
ifelse(result>0,print(result),print('should bigger'))
results=c(results,result)
}
}
plot(results)
}
get(400,405,20,25)
get(400,405,20,22)
get(400,405,20,30)
get(400,405,25,30)
get(400,402,25,30)
get(400,401,25,30)
get(350,355,25,30)
get(340,345,25,30)
get(330,335,25,30)
get(300,305,25,30)
get(250,255,25,30)
get(200,205,25,30)
get(200,205,55,60)
get(200,205,45,50)
get(200,205,35,30)
get(200,205,35,36)
get(200,205,20,30)
get(200,205,20,40)
get(200,205,10,40)
get(200,205,30,40)
abline(results=2^128)
plot(results)
abline(results=2^128)
abline(results=2^128)
abline(y=2^128)
plot(results)
lines(y=2^128)
lines(y=2^128,x=0)
plot(results)
lines(y=2^128,x=0)
get(200,205,30,40)
get=function(x,y,w,z){
results=0
for(i in x:y){
for(j in w:z){
result=choose(i,j)-2^128
ifelse(result>0,print(result),print('should bigger'))
results=c(results,result)
}
}
plot(results)
lines(y=2^128)
}
get(200,205,30,40)
get=function(x,y,w,z){
results=0
for(i in x:y){
for(j in w:z){
result=choose(i,j)-2^128
ifelse(result>0,print(result),print('should bigger'))
results=c(results,result)
}
}
plot(results)
lines(y=2^128,x=0)
}
get(200,205,30,40)
get(200,205,40,50)
result=choose(202,41)-2^128
choose(202,41)-2^128
choose(203,41)-2^128
choose(201,41)-2^128
choose(201,40)-2^128
choose(200,40)-2^128
get(200,205,10,50)
get(200,205,5,50)
source('C:/Users/yzm/Desktop/graduate/attack.r', echo=TRUE)
get(50,100,5,50)
get(50,100,5,50)
get(90,100,5,50)
get(100,200,5,50)
get(100,200,5,10)
get(100,200,10,50)
get(100,200,40,50)
get(100,200,40,45)
get(100,200,40,42)
get(100,200,40,42)
get(180,200,40,42)
get(180,190,40,42)
get(180,190,30,42)
get(180,190,30,32)
get(180,190,32,35)
get(180,190,35,40)
get(180,190,35,40)
get(180,185,35,40)
results=2^128
get=function(x,y,w,z){
for(i in x:y){
for(j in w:z){
result=choose(i,j)-2^128
ifelse(result>0,print(result),print('should bigger'))
results=c(results,result)
}
}
plot(results)
}
get(180,185,35,40)
for(i in x:y){
for(j in w:z){
result=choose(i,j)-2^128
ifelse(result>0,print(result),print('should bigger'))
results=c(results,result)
}
}
plot(results)
get=function(x,y,w,z){
for(i in x:y){
for(j in w:z){
result=choose(i,j)-2^128
ifelse(result>0,print(result),print('should bigger'))
results=c(results,result)
}
}
plot(results)
}
get(180,185,35,40)
get(180,185,35,37)
get(180,183,35,37)
get(100,200,10,50)
results
plot(results)
get(100,200,1,50)
get(180,200,1,50)
get(180,182,1,50)
get(180,182,45,50)
get(80,82,45,50)
get(100,1000,1,30)
get(800,1000,1,20)
get(800,850,1,20)
get(800,850,1,10)
get(800,850,10,15)
get(800,850,15,20)
get(800,820,15,20)
get(800,820,15,17)
get(800,820,15,19)
get(800,820,17,19)
get(800,820,17,19)
get(820,825,17,19)
choose(1000,20)-2^128
choose(1000,10)-2^128
choose(1000,15)-2^128
choose(1000,17)-2^128
choose(1000,18)-2^128
get(50,100,10,30)
get(50,100,10,40)
get(50,200,10,40)
get(150,200,10,40)
get(180,200,10,40)
get(180,200,10,30)
get(180,200,10,40)
get(180,200,10,50)
get(180,200,10,50)
get(100,200,10,50)
get(150,200,25,50)
get(175,200,38,50)
choose(200,37)-2^128
choose(200,35)-2^128
choose(200,34)-2^128
choose(200,35)-2^128
