attach(mtcars)
layout(
matrix(c(1,1,2,3),2,2, byrow =  TRUE),
widths = c(3,1),heights = c(1,2)
)
hist(wt)
hist(disp)
hist(mpg)
detach(mtcars)
attach(mtcars)
layout(
matrix(c(1,1,2,3),2,2, byrow =  TRUE),
widths = c(3,1),heights = c(1,2)
)
hist(wt)
hist(disp)
hist(mpg)
detach(mtcars)
attach(mtcars)
layout(
matrix(c(1,1,2,3),2,2, byrow =  TRUE),
widths = c(3,1),heights = c(1,2)
)
hist(wt)
hist(disp)
hist(mpg)
detach(mtcars)
opar=par(no.readonly = TRUE)
par(fig=c(0,0.8,0,0.8))
plot(mtcar$wt,mtcar$mpg,xlab="mpg",ylab="car weight")
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$wt,horizontal = TRUE, axis=FALSE)
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcar$mpg,axis=FALSE)
mtext(" enhance scatterplot",side=3,outer=TRUE,line=-3)
par(opar)
opar=par(no.readonly = TRUE)
par(fig=c(0,0.8,0,0.8))
plot(mtcar$wt,mtcar$mpg,xlab="mpg",ylab="car weight")
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$wt,horizontal = TRUE, axis=FALSE)
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcar$mpg,axis=FALSE)
mtext(" enhance scatterplot",side=3,outer=TRUE,line=-3)
par(opar)
opar=par(no.readonly = TRUE)
par(fig=c(0,0.8,0,0.8))
plot(mtcars$wt,mtcars$mpg,xlab="mpg",ylab="car weight")
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$wt,horizontal = TRUE, axis=FALSE)
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$mpg,axis=FALSE)
mtext(" enhance scatterplot",side=3,outer=TRUE,line=-3)
par(opar)
opar=par(no.readonly = TRUE)
par(fig=c(0,0.8,0,0.8))
plot(mtcars$wt,mtcars$mpg,xlab="mpg",ylab="car weight")
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$wt,horizontal = TRUE, axis=FALSE)
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$mpg,axis=FALSE)
mtext(" enhance scatterplot",side=3,outer=TRUE,line=-3)
par(opar)
opar=par(no.readonly = TRUE)
par(fig=c(0,0.8,0,0.8))
plot(mtcars$wt,mtcars$mpg,xlab="mpg",ylab="car weight")
par(fig=c(0,0.8,0.55,1),new=TRUE)
boxplot(mtcars$wt,horizontal = TRUE, axis=FALSE)
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$mpg,axis=FALSE)
mtext(" enhance scatterplot",side=3,outer=TRUE,line=-3)
par(opar)
opar=par(no.readonly = TRUE)
par(fig=c(0,0.8,0,0.8))
plot(mtcars$wt,mtcars$mpg,xlab="mpg",ylab="car weight")
par(fig=c(0,0.8,0.55,1),new=TRUE)
boxplot(mtcars$wt,horizontal = TRUE, axis=FALSE)
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$mpg,axis=FALSE)
mtext(" enhance scatterplot",side=3,outer=TRUE,line=-3)
par(opar)
print(B)
B=data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5)
manager=c(1,2,3,4,5)
date=c("10/24/08","10/28/08","10/1/08","10/12/08","5/1/09")
country=c("US","US","UK","UK","UK")
gender=c("M","F","F","M","F")
age=c(32,42,25,39,99)
q1=c(5,3,3,3,2)
q2=c(4,5,5,3,2)
q3=c(5,2,5,4,1)
q4=c(5,5,5,NA,2)
q5=c(5,5,2,NA,1)
B=data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5)
print(B)
B=data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringAsFactors=FALSE)
print(B)
?stringsAsFactors
??stringsAsFactors
5/2
5%/%2
mydata=data.frame(x1=c(2,2,4,6),x2=c(3,4,2,8))
print(mydata)
mydata$sum=x1+x2
mydata$mean=(x1+x2)/2
mydata=transfrom(mydata,sum=x1+x2,mean=(x1+x2)/2)
mydata=transform(mydata,sum=x1+x2,mean=(x1+x2)/2)
mydata
B$age[B$age==99]=NA
B
ssion  将在condition 的值为true  时进行赋值
B$agecat[B$age>75]="Elder"
B$agecat[B$age>55&B$age<75]="Middle aged"
B$agecat[B$age<55]="Young"
B
B=within(B,{
agecat=NA
agecat[age>75]="elder"
agecat[age>55&age<75]="Middle aged"
agecat[age<55]="Young"
})
B
fix(B)
B
B=within(B,{
agecat=NA
agecat[age>75]="elder"
agecat[age>55&age<75]="Middle aged"
agecat[age<55]="Young"
})
B
rename(B,c(stringAsFactors="stringsAsFactors"))
B
rename(B,c(stringAsFactors="stringsAsFactors"))
library(reshape)
library(reshape2)
rename(B,c(stringAsFactors="stringsAsFactors"))
?rename
??rename
B=rename(B,c(stringAsFactors="stringsAsFactors"))
install.packages("reshape2")
?rename
??rename
B=rename(B,c(stringAsFactors="stringsAsFactors"))
library(reshape)
install.packages(reshape)
install.packages(reshape)
install.packages("reshape")
library(reshape)
B=rename(B,c(stringAsFactors="stringsAsFactors"))
B
fix(B)
B
NA==NA
1==NA
is.na(NA)
print(na.omit(B))
print(na.remove(B))
B
Sys.date()
Sys.date
Sys.chmod()
Sys.Date()
Date()
date()
print(B[order(age,gender)])
print(B[order(age)])
print(B[order(-age)])
print(B[order(B$age)])
newdata=B[order(gender,age)]
attach(B)
newdata=B[order(gender,age)]
detach(B)
print(B[order(B$age)])
attach(B)
newdata=B[order(gender,age),]
detach(B)
print(B[order(age)])
print(newdata)
print(B[order(B$age)])
attach(B)
newdata=B[order(age),]
detach(B)
print(newdata)
attach(B)
newdata=B[order(age,gender),]
detach(B)
attach(B)
newdata=B[order(age,gender),]
detach(B)
print(newdata)
print(B[order(B$age)])
A=c(1,2,3,4,5)
C=c(6,7,8,9,0)
print(D=cbind(A,C))
A=c(1,2,3,4,5)
C=c(6,7,8,9,0)
D=cbind(A,C)
print(D)
A=c(1,2,3,4,5)
C=c(6,7,8,9,0)
D=cbind(A,C)
E=merge(A,C)
print(D)
print(E)
F=rbind(A,C)
print(F)
A
G=D[,c(2:3)]
G=D[,c(1:3)]
G=D[,c(1:2)]
G
G=D[,c(2:2)]
G
print(B[,c(2:3)])
print(B[,c(2:2)])
print(B[,c(2:5)])
print(B[,c(2:4)])
print(B[c(1:3),c(2:4)])
B$date=as.Date(B$date,"%m/%d%y")
startdate=as.Date("2009-01-01")
enddate=as.Date("2009-10-31")
print(B[which(B$date>=startdate&B$date<=enddate)])
B$date=as.Date(B$date,"%m/%d%y")
startdate=as.Date("2000-01-01")
enddate=as.Date("2009-10-31")
print(B[which(B$date>=startdate&B$date<=enddate)])
B$date=as.Date(B$date,"%m/%d%y")
startdate=as.Date("2000-01-01")
enddate=as.Date("2019-10-31")
print(B[which(B$date>=startdate&B$date<=enddate)])
B$date=as.Date(B$date,"%m/%d%y")
B$date
B
print(B)
manager=c(1,2,3,4,5)
date=c("10/24/08","10/28/08","10/1/08","10/12/08","5/1/09")
country=c("US","US","UK","UK","UK")
gender=c("M","F","F","M","F")
age=c(32,42,25,39,99)
q1=c(5,3,3,3,2)
q2=c(4,5,5,3,2)
q3=c(5,2,5,4,1)
q4=c(5,5,5,NA,2)
q5=c(5,5,2,NA,1)
B=data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringsAsFactors=FALSE)
print(B)
B=within(B,{
agecat=NA
agecat[age>75]="elder"
agecat[age>55&age<75]="Middle aged"
agecat[age<55]="Young"
})
fix(B)
B=within(B,{
agecat=NA
agecat[age>75]="elder"
agecat[age>55&age<75]="Middle aged"
agecat[age<55]="Young"
})
B
startdate
B$date
$date=as.Date(B$date,"%m/%d%y")
B$date=as.Date(B$date,"%m/%d%y")
B$date
manager=c(1,2,3,4,5)
date=c("10/24/08","10/28/08","10/1/08","10/12/08","5/1/09")
country=c("US","US","UK","UK","UK")
gender=c("M","F","F","M","F")
age=c(32,42,25,39,99)
q1=c(5,3,3,3,2)
q2=c(4,5,5,3,2)
q3=c(5,2,5,4,1)
q4=c(5,5,5,NA,2)
q5=c(5,5,2,NA,1)
B=data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringsAsFactors=FALSE)
B$date=as.Date(B$date,"%mm/%dd%y")
B$date=as.Date(B$date,"%mm/%dd%y")
B$date
mysample=B(smaple(1:nrow(B),3,replace=TRUE))
B
mysample=B[smaple(1:nrow(B),3,replace=TRUE),]
mysample=B[sample(1:nrow(B),3,replace=TRUE),]
mysample
mysample
mysample=B[sample(1:nrow(B)),3,replace=FALSE]
mysample=B[sample(1:nrow(B)),3,replace=FALSE),]
mysample=B[sample(1:nrow(B),3,replace=FALSE),]
mysample
mysample=B[sample(1:nrow(B),3,replace = FALSE),]
mysample
library(sqldf)
install.packages("sqldf")
library(sqldf)
install.packages("chron")
newdf=sqldf("select * from mtcars where carb=1 order by mpg",row.names=TRUE)
library(sqldf)
newdf=sqldf("select * from mtcars where carb=1 order by mpg",row.names=TRUE)
library(chron)
install.packages(chron)
install.packages("chron")
library(chron)
install.packages("chron")
install.packages("C:/Users/yzm/Desktop/chron_2.3-50.zip", repos = NULL, type = "win.binary")
library(sqldf)
newdf=sqldf("select * from mtcars where carb=1 order by mpg",row.names=TRUE)
newdf
print(sqldf("select avg(mpg) as avg_mpg , avg(disp) as avg_disp, gear from mtcars where cyl in c(4,6) group by gcar"))
sqldf("select avg(mpg) as avg_mpg , avg(disp) as avg_disp, gear from mtcars where cyl in c(4,6) group by gcar")
sqldf("select avg(mpg) as avg_mpg , avg(disp) as avg_disp, gear from mtcars where cyl in (4,6) group by gcar")
print(sqldf("select avg(mpg) as avg_mpg , avg(disp) as avg_disp, gear from mtcars where cyl in (4,6) group by gear"))
print(sqldf("select round(avg(mpg)) as avg_mpg , avg(disp) as avg_disp, gear from mtcars where cyl in (4,6) group by gear"))
paste("x",1:3,seq="M")
options(digit=2)#  数字全部用两位小数表示
Student=c("JS","AW","BM","DJ","JM","CC","RY","GK","JE","MR")
Math=c(502,600,412,358,495,512,410,625,573,522)
Science=c(95,99,80,82,75,85,80,95,89,86)
English=c(25,22,18,15,20,28,15,30,27,18)
roster=data.frame(Student,Math,Science,English,stringsAsFactors = FALSE)
roster
z=scale(roster[,2:4])
z
roster=cbind(roster,score)
score=apply(z,1,mean)
roster=cbind(roster,score)
roster
grade[score<y[1]&score>=y[2]]="B"
options(digit=2)#  数字全部用两位小数表示
Student=c("JS","AW","BM","DJ","JM","CC","RY","GK","JE","MR")
Math=c(502,600,412,358,495,512,410,625,573,522)
Science=c(95,99,80,82,75,85,80,95,89,86)
English=c(25,22,18,15,20,28,15,30,27,18)
roster=data.frame(Student,Math,Science,English,stringsAsFactors = FALSE)
roster
z=scale(roster[,2:4])
score=apply(z,1,mean)
roster=cbind(roster,score)
y=quantile(score,c(.8,.6,.4,.2))
roster=within(roster,{
grade[score>=y[1]]="A"
grade[score<y[1]&score>=y[2]]="B"
grade[score<y[2]&score>=y[3]]="C"
grade[score<y[3]&score>=y[4]]="D"
grade[score<y[4]]="F"
})
name=strsplit((roster$Student)," ")
lastName=sapply(name,"[",2)
firstName=sapply(name,"]",1)
roster=cbind(roster[,-1],lastName,firstName)# 有了详细的姓名 不用student  列了
roster=roster[order(firstName,lastName),]
roster=within(roster,{
grade[score>=y[1]]="A"
grade[score<y[1]&score>=y[2]]="B"
grade[score<y[2]&score>=y[3]]="C"
grade[score<y[3]&score>=y[4]]="D"
grade[score<y[4]]="F"
})
y=quantile(score,c(.8,.6,.4,.2))
y
roster=within(roster,{
B$grade[score>=y[1]]="A"
B$grade[score<y[1]&score>=y[2]]="B"
B$grade[score<y[2]&score>=y[3]]="C"
B$grade[score<y[3]&score>=y[4]]="D"
B$grade[score<y[4]]="F"
})
roster=within(roster,{
roster$grade[score>=y[1]]="A"
roster$grade[score<y[1]&score>=y[2]]="B"
roster$grade[score<y[2]&score>=y[3]]="C"
roster$grade[score<y[3]&score>=y[4]]="D"
roster$grade[score<y[4]]="F"
})
name=strsplit((roster$Student)," ")
lastName=sapply(name,"[",2)
firstName=sapply(name,"]",1)
roster=cbind(roster[,-1],lastName,firstName)# 有了详细的姓名 不用student  列了
roster=roster[order(firstName,lastName),]
lastName=sapply(name,"[",2)
firstName=sapply(name,"]",1)
name=strsplit((roster$Student)," ")
name
lastName=sapply(name,"[",2)
firstName=sapply(name,"]",1)
firstName=sapply(name,"[",1)
roster=cbind(roster[,-1],lastName,firstName)# 有了详细的姓名 不用student  列了
roster=roster[order(firstName,lastName),]
roster
options(digit=2)#  数字全部用两位小数表示
Student=c("J S","A W","B M","D J","J M","C C","R Y","G K","J E","M R")
Math=c(502,600,412,358,495,512,410,625,573,522)
Science=c(95,99,80,82,75,85,80,95,89,86)
English=c(25,22,18,15,20,28,15,30,27,18)
roster=data.frame(Student,Math,Science,English,stringsAsFactors = FALSE)
roster
z=scale(roster[,2:4])
score=apply(z,1,mean)
roster=cbind(roster,score)
y=quantile(score,c(.8,.6,.4,.2))
roster=within(roster,{
roster$grade[score>=y[1]]="A"
roster$grade[score<y[1]&score>=y[2]]="B"
roster$grade[score<y[2]&score>=y[3]]="C"
roster$grade[score<y[3]&score>=y[4]]="D"
roster$grade[score<y[4]]="F"
})
name=strsplit((roster$Student)," ")
lastName=sapply(name,"[",2)
firstName=sapply(name,"[",1)
roster=cbind(roster[,-1],lastName,firstName)# 有了详细的姓名 不用student  列了
roster=roster[order(firstName,lastName),]
roster
roster
options(digit=2)#  数字全部用两位小数表示
Student=c("J S","A W","B M","D J","J M","C C","R Y","G K","J E","M R")
Math=c(502,600,412,358,495,512,410,625,573,522)
Science=c(95,99,80,82,75,85,80,95,89,86)
English=c(25,22,18,15,20,28,15,30,27,18)
roster=data.frame(Student,Math,Science,English,stringsAsFactors = FALSE)
roster
z=scale(roster[,2:4])
score=apply(z,1,mean)
roster=cbind(roster,score)
y=quantile(score,c(.8,.6,.4,.2))
roster=within(roster,{
roster$grade[score>=y[1]]="A"
roster$grade[score<y[1]&score>=y[2]]="B"
roster$grade[score<y[2]&score>=y[3]]="C"
roster$grade[score<y[3]&score>=y[4]]="D"
roster$grade[score<y[4]]="F"
})
name=strsplit((roster$Student)," ")
lastName=sapply(name,"[",2)
firstName=sapply(name,"[",1)
#roster=cbind(roster[,-1],lastName,firstName)# 有了详细的姓名 不用student  列了
roster=roster[order(firstName,lastName),]
roster
options(digit=2)#  数字全部用两位小数表示
Student=c("J S","A W","B M","D J","J M","C C","R Y","G K","J E","M R")
Math=c(502,600,412,358,495,512,410,625,573,522)
Science=c(95,99,80,82,75,85,80,95,89,86)
English=c(25,22,18,15,20,28,15,30,27,18)
roster=data.frame(Student,Math,Science,English,stringsAsFactors = FALSE)
roster
z=scale(roster[,2:4])
score=apply(z,1,mean)
roster=cbind(roster,score)
roster
y=quantile(score,c(.8,.6,.4,.2))
roster=within(roster,{
roster$grade[score>=y[1]]="A"
roster$grade[score<y[1]&score>=y[2]]="B"
roster$grade[score<y[2]&score>=y[3]]="C"
roster$grade[score<y[3]&score>=y[4]]="D"
roster$grade[score<y[4]]="F"
})
name=strsplit((roster$Student)," ")
lastName=sapply(name,"[",2)
firstName=sapply(name,"[",1)
roster=cbind(lastName,firstName,roster[,-1])# 有了详细的姓名 不用student  列了
roster=roster[order(firstName,lastName),]
roster
options(digit=2)#  数字全部用两位小数表示
Student=c("J S","A W","B M","D J","J M","C C","R Y","G K","J E","M R")
Math=c(502,600,412,358,495,512,410,625,573,522)
Science=c(95,99,80,82,75,85,80,95,89,86)
English=c(25,22,18,15,20,28,15,30,27,18)
roster=data.frame(Student,Math,Science,English,stringsAsFactors = FALSE)
roster
z=scale(roster[,2:4])
score=apply(z,1,mean)
roster=cbind(roster,score)
y=quantile(score,c(.8,.6,.4,.2))
roster=within(roster,{
roster$grade[score>=y[1]]="A"
roster$grade[score<y[1]&score>=y[2]]="B"
roster$grade[score<y[2]&score>=y[3]]="C"
roster$grade[score<y[3]&score>=y[4]]="D"
roster$grade[score<y[4]]="F"
})
name=strsplit((roster$Student)," ")
lastName=sapply(name,"[",2)
firstName=sapply(name,"[",1)
roster
options(digit=2)#  数字全部用两位小数表示
Student=c("J S","A W","B M","D J","J M","C C","R Y","G K","J E","M R")
Math=c(502,600,412,358,495,512,410,625,573,522)
Science=c(95,99,80,82,75,85,80,95,89,86)
English=c(25,22,18,15,20,28,15,30,27,18)
roster=data.frame(Student,Math,Science,English,stringsAsFactors = FALSE)
roster
z=scale(roster[,2:4])
score=apply(z,1,mean)
roster=cbind(roster,score)
roster
y=quantile(score,c(.8,.6,.4,.2))
roster=within(roster,{
roster$grade[score>=y[1]]="A"
roster$grade[score<y[1]&score>=y[2]]="B"
roster$grade[score<y[2]&score>=y[3]]="C"
roster$grade[score<y[3]&score>=y[4]]="D"
roster$grade[score<y[4]]="F"
})
roster
name=strsplit((roster$Student)," ")
lastName=sapply(name,"[",2)
firstName=sapply(name,"[",1)
roster
roster=cbind(firstName,lastName,roster[,-1])# 有了详细的姓名 不用student  列了
roster=roster[order(firstName,lastName),]
roster
