options(digits=3)
set.seed(1)
runif(200)
hist(y)
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
options(digits=3)
runif(200)
hist(y)
options(digits=3)
runif(200)
hist(y)
options(digits=3)
runif(200)
hist(y)
options(digits=3)
runif(200)
hist(y)
options(digits=3)
runif(200)
hist(y)
hist(y)
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
library(lattice)
options(digits=3)
runif(200)
hist(y)
with(Wind,Temp,data = airquality)
library(lattice)
options(digits=3)
runif(200)
hist(y)
with(Wind,Temp,data = airquality)
options(digits=3)
runif(200)
hist(y)
with(Wind,Temp,data = airquality)
options(digits=3)
runif(200)
hist(y)
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
q()
getwd()
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
with(Wind,Temp,data = airquality)
with(Wind,Temp,data = airquality)
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
hist(airquality$Wind)
hist(airquality$Wind)
hist(airquality$Wind)
hist(airquality$Wind)
hist(airquality$Wind)
hist(airquality$Wind)
hist(airquality$Wind)
hist(airquality$Wind)
hist(airquality$Wind)
hist(airquality$Wind)
hist(airquality$Wind)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
boxplot(Wind~Month,airquality)
hist(airquality$Wind)
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
plot(airquality$Wind,airquality$Temp)
plot(airquality$Temp,airquality$Wind)
plot(airquality$Wind,airquality$Temp)
plot(airquality$Temp,airquality$Wind)
plot(airquality$Wind,airquality$Temp)
plot(airquality$Temp,airquality$Wind)
ls
?ggplot2
?NA
display.brewer.all()
display.brewer.all()
display.brewer.all()
display.brewer.all()
display.brewer.all()
display.brewer.all()
display.brewer.all()
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)                   #按照月份进行分面板显示
library(RColorBrewer)
library(ggplot2)
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)
X=c(1,9,2,8,3,9,4,5,7,6)
# 求平均数
mean(X)
library(lattice)
xyplot(Temp~Ozone,data=airquality)
airquality$Month=factor(airquality$Month)
q=xyplot(Temp~Ozone | Month,data=airquality,layout=c(5,1))
print(q)
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp ,color=factor(Month)))+   # 通过 facet grid  之后  Month  已经变成一个变量  所以 不用 添加引号  但是搞不懂  black   要用字符串去传值
geom_point()+                               #   设置是否显示 数据点
stat_smooth(method="lm",se=FALSE)+        # 设置  会给回归线 画法
scale_color_manual("Month",values=mc)+   #   手动设置调色板
facet_grid(.~Month)                   #按照月份进行分面板显示
library(ggplot2)
library(RColorBrewer)
#从  Dark 2 调色板 选取5种颜色 第六个颜色是黑色
mc=c(brewer.pal(5,"Dark2"),"black")
ggplot(airquality,aes(Wind,Temp,col=factor(Month)))+
geom_point()+
stat_smooth(method="lm",se=FALSE,aes(group=1,color="All"))+
stat_smooth(method="lm",se=FALSE)+
scale_color_manual("Month",values=mc)
hist(airquality$Wind)
with(Wind,Temp,data = airquality)
hist(airquality$Wind)
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
hist(airquality$Temp)
hist(airquality$Temp)
hist(airquality$Temp)
hist(airquality$Temp)
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
hist(airquality$Ozone)
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
#jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
getwd
getwd()
q()
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpeg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
jpeg("mygraphs.jpg")
pdf("mygraphs.pdf")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
source('C:/Users/yzm/Desktop/MEAN&R/Rontes/R语言实战笔记/test.R')
sink("abc.txt",append=TRUE,split=TRUE)
pdf("mygraphs.pdf")
jpeg("mygraphs.jpg")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
sink("abc.txt",append=TRUE,split=TRUE)
pdf("mygraphs.pdf")
jpeg("mygraphs.jpg")
source("test.R",encoding="UTF-8")
sink()
dev.off()
source("test.R")
q()
library(vcd)
help(Arthritis)
Arthritis
View(Arthritis)
example(Arthritis)
head(diamond)
head(diamond)
library(ggplot2)
head(diamond)
install.packages(ggplot2)
install.packages(ggplot2)
install.packages(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
head(diamond)
head(diamond)
head(diamond)
head(diamond)
head(diamond)
data.frame(diamond)
data.frame(diamond)
library(ggplot2)
install.packages(ggplot2)
data.frame(diamond)
head(diamond)
head(diamond)
head(diamond)
head(diamond)
head(diamond)
head(diamond)
library(ggplot2)
head(airquality)
head(diamonds)
library(ggplot2)
head(diamonds)
sample_date=sample(2,nrow(diamonds),replace = TRUE,prob=c(0.7,0.3))
trail_date=diamonds[sample_date==1] #训练数据
test_date=diamonds[sample_date==2] # 测试数据
sample_date=sample(2,nrow(diamonds),replace = TRUE,prob=c(0.7,0.3))
trail_date=diamonds[sample_date==1,] #训练数据
test_date=diamonds[sample_date==2,] # 测试数据
View(test_date)
View(test_date)
view(test_date)
View(test_date)
summary(trail_data)
library(ggplot2)
#dataset 名称由   diamond 改为 diamonds
head(diamonds)
# 构件数据  将原有的一个数据集按照比例拆分成两个
sample_data=sample(2,nrow(diamonds),replace = TRUE,prob=c(0.7,0.3))
trail_data=diamonds[sample_data==1,] #训练数据
test_data=diamonds[sample_data==2,] # 测试数据
summary(trail_data)
library(car)
par(mfrow=c(1,2))
hist(trail_data$depth,prob=T,xlab="钻石高度")
lines(density((trail_data$depth)))
qq.plot(trail_data$depth)
library(car)
par(mfrow=c(1,2))
hist(trail_data$depth,prob=T,xlab="钻石高度")
lines(density((trail_data$depth)))
hist(trail_data$depth,prob=T,xlab="钻石高度")
lines(density((trail_data$depth)))
hist(trail_data$depth,prob=T,xlab="钻石高度")
lines(density((trail_data$depth)))
hist(trail_data$depth,prob=T,xlab="钻石高度")
lines(density((trail_data$depth)))
hist(trail_data$depth,prob=T,xlab="钻石高度")
lines(density((trail_data$depth)))
hist(trail_data$depth,prob=T,xlab="钻石高度")
lines(density((trail_data$depth)))
qq.plot(trail_data$depth)
qqpPlot(trail_data$depth)
help("Deprecated")
help("car-deprecated").
help("car-deprecated")
qqpPlot(trail_data$depth)
qqPlot(trail_data$depth)
qqPlot(trail_data$depth)
qqPlot(trail_data$depth)
？qqplot
?qqplot
lines(density((trail_data$depth)))
hist(trail_data$depth,prob=T,xlab="钻石高度")
lines(density((trail_data$depth)))
qqPlot(trail_data$depth)
qqPlot(trail_data$depth,test_data$depth)
qqPlot( test_data$depth)
library(lattice)
bwplot(depth~color, data=trail_data)
library(lattice)
bwplot(depth~color, data=trail_data,ylab = "深度",xlab="颜色等级")
cor(trai_data[,-c(2,3,4)]) # 这里剔除了三个名义变量(切工  颜色  深度 )
cor(trail_data[,-c(2,3,4)]) # 这里剔除了三个名义变量(切工  颜色  深度 )
cor(trail_data[,-c(2,3,4)]) # 这里剔除了三个名义变量(切工  颜色  深度 )
?cor
cor(trail_data[,-c(2,3,4)])
cor(trail_data[,c(2,3,4)])
cor(trail_data[,-c(2,3,4)])
symnum(cor(trail_data[,-c(2,3,4)]))
?symnim
?symnum
trail_data[,-c(2,3,4)],y=NULL,use="everything",method = c("person","kendall","spearman")) # 这里剔除了三个名义变量(切工  颜色  深度 )
#
cor(trail_data[,-c(2,3,4)],y=NULL,use="everything") # 这里剔除了三个名义变, 量(切工  颜色  深度 )
cor(trail_data[,-c(2,3,4)],y=1,use="everything")
cor(trail_data[,-c(1,2,3)],y=NULL,use="everything") # 这里剔除了三个名义变, 量(切工  颜色  深度 )
cor(trail_data[,-c(1,2,4)],y=NULL,use="everything") # 这里剔除了三个名义变, 量(切工  颜色  深度 )
cor(trail_data[,-c(2,2,4)],y=NULL,use="everything") # 这里剔除了三个名义变, 量(切工  颜色  深度 )
cor(trail_data[,-c(2,3,4)],y=NULL,use="everything") # 这里剔除了三个名义变, 量(切工  颜色  深度 )
cor(trail_data[,-c(2,3,5)],y=NULL,use="everything") # 这里剔除了三个名义变, 量(切工  颜色  深度 )
cor(trail_data[,c(2,3,4)],y=NULL,use="everything") # 这里剔除了三个名义变, 量(切工  颜色  深度 )
cor(trail_data[,-c(2,3,4)],use="everything") # 这里剔除了三个名义变, 量(切工  颜色  深度 )
View(test_data)
cor(trail_data[],use="everything") # 这里剔除了三个名义变, 量(切工  颜色  深度 )
symnum(cor(trail_data[c(1,5,6,7,8,9)]))
symnum(cor(trail_data[c(1,5,6,7,8,9,10)]))
lm_model=lm(price~., data=trail_data)
summary(lm_model)
