split=function(x){
out=character(3)
#get names
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.numeric(x)<1890)
out[2]=ifelse(length(i)>0,x[i],NA)
i=which(as.numeric(x)>1890)
out[3]=ifelse(length(i)>0,x[i],NA)
out
}
info1=apply(info,split)
info1=apply(split,info)
info1=apply(split,info)
info1=lapply(info,split)
info1
info=str_to_lower(info)
info
str_replace(info,';',',')
str_replace(info,';',',')
str_replace_all(info,';',',')
info=str_replace_all(info,';',',')
split=function(x){
out=character(3)
#get names
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.numeric(x)<1890)
out[2]=ifelse(length(i)>0,x[i],NA)
i=which(as.numeric(x)>1890)
out[3]=ifelse(length(i)>0,x[i],NA)
out
}
info1=lapply(info,split)
info1
split=function(x){
out=character(3)
#get names
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
# i=which(as.numeric(x)<1890)
# out[2]=ifelse(length(i)>0,x[i],NA)
# i=which(as.numeric(x)>1890)
# out[3]=ifelse(length(i)>0,x[i],NA)
out
}
info1=lapply(info,split)
info1
i=grepl('[[:alpha:]]',info[1])
i
standardFields <- lapply(fieldList, assignFields)
standardFields
fieldList
fieldList=strsplit(data,split=',')
data
data
info
exer=readLines(file.choose(),encoding = 'utf-8')
exer
commonts=grepl("^/",exer)
commonts
commonts=exer[commont]
info=exer[!commont]
info
infoList=strsplit(info,';')
infoList
infoList=str_to_lower(infoList)
infoList
info
info=str_to_lower(info)
info
infoList=strsplit(info,';')
infoList
split=function(x){
out=character(3)
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.numberic(x)<100)
out[2]=ifelse(is.na(i),NA,x[i])
i=which(as.numberic(x)<100)
out[3]=ifelse(length(i)>0,x[i],NA)
out
}
infoFrame=lapply(infoList,split)
split=function(x){
out=character(3)
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.numeric(x)<100)
out[2]=ifelse(is.na(i),NA,x[i])
i=which(as.numeric(x)<100)
out[3]=ifelse(length(i)>0,x[i],NA)
out
}
q1
split=function(x){
out=character(3)
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.numeric(x)<100)
out[2]=ifelse(is.na(i),NA,x[i])
i=which(as.numeric(x)<100)
out[3]=ifelse(length(i)>0,x[i],NA)
out
}
infoFrame=lapply(infoList,split)
infoFrame
split=function(x){
out=character(3)
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.numeric(x))
out[2]=ifelse(is.na(i),NA,x[i])
i=which(as.numeric(x))
out[3]=ifelse(length(i)>0,x[i],NA)
out
}
infoFrame=lapply(infoList,split)
infoFrame
split=function(x){
out=character(3)
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.integer(x))
out[2]=ifelse(is.na(i),NA,x[i])
i=which(as.numeric(x))
out[3]=ifelse(length(i)>0,x[i],NA)
out
}
infoFrame=lapply(infoList,split)
infoFrame
split=function(x){
out=character(3)
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.integer(x))
out[2]=ifelse(is.na(i),NA,x[i])
i=which(as.numeric(x))
out[3]=ifelse(length(i)>0,x[i],NA)
out
}
infoFrame=lapply(infoList,split)
infoList
as.integer(infoList[3])
as.integer(infoList[3][2])
infoList[1]
infoList[1][2]
infoList[1]$21
infoList[1][1]
infoList[1][1][2]
infoList[1][1][1]
i=grepl('[[:alpha:]]',infoList[1])
i
as.integer(55)
as.integer(55.3)
class(55)
class(55.3)
55%1==0
55/1==0
split=function(x){
out=character(3)
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.numeric(x)==x)
out[2]=ifelse(is.na(i),NA,x[i])
i=which(as.numeric(x)!=x)
out[3]=ifelse(length(i)>0,x[i],NA)
out
}
infoFrame=lapply(infoList,split)
infoFrame
split=function(x){
out=character(3)
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.numeric(x)==x)
out[2]=ifelse(is.na(i),NA,x[i])
i=which(as.numeric(x)!=x)
out[3]=ifelse(length(i)>0,NA,x[i])
out
}
infoFrame=lapply(infoList,split)
infoFrame
as.double(55)
as.double(55.3)
split=function(x){
out=character(3)
i=grepl('[[:alpha:]]',x)
out[1]=x[i]
i=which(as.numeric(x)==x)
out[2]=ifelse(is.na(i),NA,x[i])
i=which(as.double(x))
out[3]=ifelse(length(i)>0,x[i],NA)
out
}
infoFrame=lapply(infoList,split)
infoFrame
infoList
infoList[1]
infoList[1][1]
i=grepl('[[:alpha:]]',infoList[1])
i
infoList[1][1]
infoFrame
fix(infoList)
inf=unlist(infoList)
inf
info
infoList
lapply(infoList,length)
append(infoList[2],'NA')
append(infoList[2],'NA')
infoList[2]
infoList[2]+'NA'
infoList[2]=c(infoList[2],'NA')
infoList
infoList[2]=c(infoList[2],'NA')
class(infoList)
class(infoList[2])
append
?append
append(infoList[2],'NA',afterlength(infoList[2]))
append(infoList[2],'NA',after=length(infoList[2]))
infoList
infoList[2]
infoList[2]=append(infoList[2],'NA',after=infoList[2])
infoList[2]=append(infoList[2],'NA',after=length(infoList[2]))
infoList[2]=append(infoList[2],'NA',after=length(infoList[2]))
infoList
infoList[2]
infoList[2]=append(infoList[2],'NA',after=length(infoList[2]))
infoList[2]=append(infoList[2],'NA',after=2)
infoList[2]=append(infoList[2],'NA',after=3)
infoList[2]
infoList[2]=append(infoList[2],'NA',after=1)
infoList[2]=append(infoList[2],'NA',after=0)
infoList[2]=c(infoList[2],'NA')
info
info=str_to_lower(info)
info
info[1]
info[2]
info[2]=append(info[2],'NA')
info[2]=paste(info[2],'NA')
info[2]
infoList=strsplit(info,';')
infoList
df=data.frame(infoList,byrow)
df=data.frame(infoList,byrow=3)
df
df=data.frame(unlist(infoList),byrow=3)
df
dat=unlist(infoList)
dat
df=data.frame(dat,byrow=3)
df
?data.frame
df=matrix(dat,byrow=3)
df
df=matrix(dat,byrow=T)
df=matrix(dat,byrow=T,ncol=3)
df
?matrix
dm=matrix(dat,byrow=T,ncol=3)
df=data.frame(dm)
df
CN=c('gender','age','weight')
colna(df)=CN
colname(df)=CN
colnames(df)=CN
df
dis=adist(df$gender,codes)
dis
apply(dis,1,which.min)
result=apply(dis,1,which.min)
class(result)
df$gender=codes[i]
df
df$gender=codes[dis]
df
dis
df$gender=codes[result]
df
commonts=grepl("^/",exer)
commonts=exer[commont]
info=exer[!commont]
info
info[2]=paste(info[2],'NA')
info
str_trim(info)
str_to_lower(info)
str_to_lower(info)
info=exer[!commont]
str_to_lower(info)
info[2]=paste(info[2],'NA')
str_trim(info)
infom=Matrix(info,ncol=3)
infoList=strsplit(info,';')
infom=Matrix(infoList,ncol=3)
info
strsplit(info,';')
infoList=strsplit(info,';')
infoM=Matrix(infoList,ncol=3)
infoM=Matrix(unlist(infoList),ncol=3)
infoM=Matrix(info,ncol=3)
infoM=Matrix(infoList,ncol=3)
infoM
info
infoList=str_split(info,';')
infoList
unlist(infoList)
infoM=Matrix(infoList,col=3)
infoM=Matrix(infoList,ncol=3)
infoM=Matrix(unlist(infoList),ncol=3)
View(infoFrame)
View(info1)
?Matrix
infoList
infoList[1]
Ulist=unlist(infoList)
Ulist
Ulist[1]
Ulist[2]
Matrix(Ulist,ncol=3)
Matrix(Ulist,nrow=3)
info
info=exer[!commont]
info
str_trim(info)
str_to_lower(info)
info[2]=paste(info[2],'NA')
info
Matrix(info,nrow=3)
Matrix(unlist(info),nrow=3)
infoList=strsplit(info,';')
infoList
Matrix(infoList,nrow=3)
Matrix(infoList,ncol=3)
matrix(infoList,ncol=3)
matrix(unlist(infoList),ncol=3)
infom=Matrix(info,ncol=3)
matrix(unlist(infoList))
matrix(unlist(infoList),byrow=T,ncol=3)
info=str_to_lower(info)
info[2]=paste(info[2],'NA')
infoList=strsplit(info,';')
infoList
infom=matrix(unlist(infoList),byrow=T,ncol=3)
df=data.frame(infom)
df
info=exer[!commont]
str_trim(info)
info=str_to_lower(info)
info[2]=paste(info[2],'NA')
infoList=strsplit(info,';')
infoList
infom=matrix(unlist(infoList),byrow=T,ncol=3)
df=data.frame(infom)
df
colname=c('gender','age','weight')
colnames(df)=colname
df
dis=adist(df$gender,codes)
dis
i=apply(dis,1,which.min)
i
df$gender=codes[i]
df
str(df)
df$gender=as.factor(df$gender)
str(df)
df$age=as.numeric(df$age)
str(df)
df$gender=codes[i]
str(df)
#### next part process to the consistent data
# 1 detection of an inconsistency
age=c(23,21,NA)
lapply(age,mean)
sapply(age,mean)
apply(age,mean)
mean(age)
mean(age,na.omit=T)
mean(age,na.rm=T)
x <- c(1:10, 20, 30)
X
x
boxplot.stats(x)$out
boxplot.stats(x)
boxplot(x)
boxplot(x)
boxplot.stats(x)
data=read.csv(file.choose(),encoding = 'utf-8')
data
class(data)
str(data)
install.packages("editrules")
library(editrules)
class(data)
e=editset(c('age'>0,'age<150'))
(e=editset(c('age'>0,'age<150')))
(e=editset(c('age'>=0,'age<=150')))
(E <- editset(c("age >=0", "age <= 150")))
(e= editset(c('age>=0','age<=150')))
violatedEdits(E,data)
?editset
data
(F <- editset(c("yearsmarried >=0", "yearsmarried <= 50")))
violatedEdits(E,F,data)
(F<- editset(c("yearsmarried >=0", "yearsmarried <= 50")))
violatedEdits(F,data)
data
(E <- editset(c("age >=0", "age <= 150","yearsmarried >=0", "yearsmarried <= 50")))
violatedEdits(E,data)
F=editfile(file.choose())
F
violatedEdits(F,data)
violatedEdits(F,data)
F
data
F=editfile(file.choose())
F
violatedEdits(F,data)
data
F=editfile(file.choose())
F
F=editfile(file.choose())
F
F=editfile(file.choose())
F
violatedEdits(F,data)
data[1]
data[1,]
data[1,]$status %in% c('married','single','widowed')
ve=violatedEdits(F,data)
summary(ve)
summary(ve)
plot(ve)
barplot(ve)
plot(ve)
summary(data)
plot(F)
id=c(2,5)
people[id,]
data[id,]
violatedEdits(F,data[id,])
le=localizeErrors(F,data[id,],method='mip')
le$adapt
data[2, "status"] <- "single"
data[5, "height"] <- 7
data[5, "agegroup"] <- "adult"
summary(violatedEdits(E, data[id, ]))
le=localizeErrors(F,data[id,],method='mip')
le$adapt
data[id,]
#####  unifiy the height
marx=read.csv(file.choose())
marx
marx_m=marx
I= marx$unit=='cm'
marx_m[I,'height']=marx$height/100
marx_m
#####  unifiy the height
marx=read.csv(file.choose(),sep=' ')
marx_m=marx
marx_m
I= marx$unit=='cm'
marx_m[I,'height']=marx$height/100
I= marx$unit=='cm'
marx_m[I,'height']=marx$height/100
I= marx$unit=='cm'
marx_m[I,'height']=marx$height/100
I
I ='cm'
marx_m[I,'height']=marx$height/100
marx_m[I,'height']=marx$height[I]/100
marx_m
marx_m[I,'height']=marx$height[I]/100
marx_m
G=editmatrix(expression(
staff+cleaning+housing=total,
staff>=0,
housing>=0,
cleaning>=0
))
G=editmatrix(expression(
staff+cleaning+housing==total,
staff>=0,
housing>=0,
cleaning>=0
))
dat=data.frame(
staff=c(100,100,100),
housing=c(NA,50,NA),
cleaning=c(NA,NA,NA),
total=c(100,80,NA)
)
str(dat)
cor=deduImute(G,dat)
cor=deduImpute(G,dat)
install.packages("deducorrect")
library(deducorrect)
cor=deduImpute(G,dat)
cor$corrected
dat=data.frame(
staff=c(100,100,100),
housing=c(NA,50,NA),
cleaning=c(NA,NA,NA),
total=c(100,180,NA)
)
cor=deduImpute(G,dat)
cor$corrected
